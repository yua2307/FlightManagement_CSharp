#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Đồ_án
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FlightManagement_Demo_2")]
	public partial class LinQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFlights(Flights instance);
    partial void UpdateFlights(Flights instance);
    partial void DeleteFlights(Flights instance);
    partial void InsertReceipts(Receipts instance);
    partial void UpdateReceipts(Receipts instance);
    partial void DeleteReceipts(Receipts instance);
    partial void InsertTickets(Tickets instance);
    partial void UpdateTickets(Tickets instance);
    partial void DeleteTickets(Tickets instance);
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    #endregion
		
		public LinQDataContext() : 
				base(global::Đồ_án.Properties.Settings.Default.FlightManagement_Demo_2ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Flights> Flights
		{
			get
			{
				return this.GetTable<Flights>();
			}
		}
		
		public System.Data.Linq.Table<Prices> Prices
		{
			get
			{
				return this.GetTable<Prices>();
			}
		}
		
		public System.Data.Linq.Table<Receipts> Receipts
		{
			get
			{
				return this.GetTable<Receipts>();
			}
		}
		
		public System.Data.Linq.Table<Tickets> Tickets
		{
			get
			{
				return this.GetTable<Tickets>();
			}
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Flight")]
	public partial class Flights : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_FLIGHT;
		
		private System.Nullable<System.DateTime> _DE_TIME;
		
		private System.Nullable<System.DateTime> _AR_TIME;
		
		private string _DE_AIRPORT;
		
		private string _AR_AIRPORT;
		
		private System.Nullable<int> _EMPTY_SEAT;
		
		private System.Nullable<int> _BOOKED_SEAT;
		
		private EntitySet<Tickets> _Tickets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_FLIGHTChanging(int value);
    partial void OnID_FLIGHTChanged();
    partial void OnDE_TIMEChanging(System.Nullable<System.DateTime> value);
    partial void OnDE_TIMEChanged();
    partial void OnAR_TIMEChanging(System.Nullable<System.DateTime> value);
    partial void OnAR_TIMEChanged();
    partial void OnDE_AIRPORTChanging(string value);
    partial void OnDE_AIRPORTChanged();
    partial void OnAR_AIRPORTChanging(string value);
    partial void OnAR_AIRPORTChanged();
    partial void OnEMPTY_SEATChanging(System.Nullable<int> value);
    partial void OnEMPTY_SEATChanged();
    partial void OnBOOKED_SEATChanging(System.Nullable<int> value);
    partial void OnBOOKED_SEATChanged();
    #endregion
		
		public Flights()
		{
			this._Tickets = new EntitySet<Tickets>(new Action<Tickets>(this.attach_Tickets), new Action<Tickets>(this.detach_Tickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_FLIGHT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_FLIGHT
		{
			get
			{
				return this._ID_FLIGHT;
			}
			set
			{
				if ((this._ID_FLIGHT != value))
				{
					this.OnID_FLIGHTChanging(value);
					this.SendPropertyChanging();
					this._ID_FLIGHT = value;
					this.SendPropertyChanged("ID_FLIGHT");
					this.OnID_FLIGHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DE_TIME", DbType="DateTime")]
		public System.Nullable<System.DateTime> DE_TIME
		{
			get
			{
				return this._DE_TIME;
			}
			set
			{
				if ((this._DE_TIME != value))
				{
					this.OnDE_TIMEChanging(value);
					this.SendPropertyChanging();
					this._DE_TIME = value;
					this.SendPropertyChanged("DE_TIME");
					this.OnDE_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AR_TIME", DbType="DateTime")]
		public System.Nullable<System.DateTime> AR_TIME
		{
			get
			{
				return this._AR_TIME;
			}
			set
			{
				if ((this._AR_TIME != value))
				{
					this.OnAR_TIMEChanging(value);
					this.SendPropertyChanging();
					this._AR_TIME = value;
					this.SendPropertyChanged("AR_TIME");
					this.OnAR_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DE_AIRPORT", DbType="NVarChar(100)")]
		public string DE_AIRPORT
		{
			get
			{
				return this._DE_AIRPORT;
			}
			set
			{
				if ((this._DE_AIRPORT != value))
				{
					this.OnDE_AIRPORTChanging(value);
					this.SendPropertyChanging();
					this._DE_AIRPORT = value;
					this.SendPropertyChanged("DE_AIRPORT");
					this.OnDE_AIRPORTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AR_AIRPORT", DbType="NVarChar(100)")]
		public string AR_AIRPORT
		{
			get
			{
				return this._AR_AIRPORT;
			}
			set
			{
				if ((this._AR_AIRPORT != value))
				{
					this.OnAR_AIRPORTChanging(value);
					this.SendPropertyChanging();
					this._AR_AIRPORT = value;
					this.SendPropertyChanged("AR_AIRPORT");
					this.OnAR_AIRPORTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPTY_SEAT", DbType="Int")]
		public System.Nullable<int> EMPTY_SEAT
		{
			get
			{
				return this._EMPTY_SEAT;
			}
			set
			{
				if ((this._EMPTY_SEAT != value))
				{
					this.OnEMPTY_SEATChanging(value);
					this.SendPropertyChanging();
					this._EMPTY_SEAT = value;
					this.SendPropertyChanged("EMPTY_SEAT");
					this.OnEMPTY_SEATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOOKED_SEAT", DbType="Int")]
		public System.Nullable<int> BOOKED_SEAT
		{
			get
			{
				return this._BOOKED_SEAT;
			}
			set
			{
				if ((this._BOOKED_SEAT != value))
				{
					this.OnBOOKED_SEATChanging(value);
					this.SendPropertyChanging();
					this._BOOKED_SEAT = value;
					this.SendPropertyChanged("BOOKED_SEAT");
					this.OnBOOKED_SEATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Flight_Ticket", Storage="_Tickets", ThisKey="ID_FLIGHT", OtherKey="ID_FLIGHT")]
		public EntitySet<Tickets> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tickets(Tickets entity)
		{
			this.SendPropertyChanging();
			entity.Flights = this;
		}
		
		private void detach_Tickets(Tickets entity)
		{
			this.SendPropertyChanging();
			entity.Flights = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Price")]
	public partial class Prices
	{
		
		private System.Nullable<int> _ID_Flight;
		
		private System.Nullable<decimal> _price_Bussiness;
		
		private System.Nullable<decimal> _price_Economy;
		
		private System.Nullable<decimal> _price_First;
		
		public Prices()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Flight", DbType="Int")]
		public System.Nullable<int> ID_Flight
		{
			get
			{
				return this._ID_Flight;
			}
			set
			{
				if ((this._ID_Flight != value))
				{
					this._ID_Flight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price_Bussiness", DbType="Money")]
		public System.Nullable<decimal> price_Bussiness
		{
			get
			{
				return this._price_Bussiness;
			}
			set
			{
				if ((this._price_Bussiness != value))
				{
					this._price_Bussiness = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price_Economy", DbType="Money")]
		public System.Nullable<decimal> price_Economy
		{
			get
			{
				return this._price_Economy;
			}
			set
			{
				if ((this._price_Economy != value))
				{
					this._price_Economy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price_First", DbType="Money")]
		public System.Nullable<decimal> price_First
		{
			get
			{
				return this._price_First;
			}
			set
			{
				if ((this._price_First != value))
				{
					this._price_First = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Receipt")]
	public partial class Receipts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_HoaDon;
		
		private System.Nullable<int> _so_luong_ve_mua;
		
		private System.Nullable<decimal> _tong_so_tien;
		
		private EntitySet<Tickets> _Tickets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_HoaDonChanging(int value);
    partial void OnID_HoaDonChanged();
    partial void Onso_luong_ve_muaChanging(System.Nullable<int> value);
    partial void Onso_luong_ve_muaChanged();
    partial void Ontong_so_tienChanging(System.Nullable<decimal> value);
    partial void Ontong_so_tienChanged();
    #endregion
		
		public Receipts()
		{
			this._Tickets = new EntitySet<Tickets>(new Action<Tickets>(this.attach_Tickets), new Action<Tickets>(this.detach_Tickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HoaDon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_HoaDon
		{
			get
			{
				return this._ID_HoaDon;
			}
			set
			{
				if ((this._ID_HoaDon != value))
				{
					this.OnID_HoaDonChanging(value);
					this.SendPropertyChanging();
					this._ID_HoaDon = value;
					this.SendPropertyChanged("ID_HoaDon");
					this.OnID_HoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_so_luong_ve_mua", DbType="Int")]
		public System.Nullable<int> so_luong_ve_mua
		{
			get
			{
				return this._so_luong_ve_mua;
			}
			set
			{
				if ((this._so_luong_ve_mua != value))
				{
					this.Onso_luong_ve_muaChanging(value);
					this.SendPropertyChanging();
					this._so_luong_ve_mua = value;
					this.SendPropertyChanged("so_luong_ve_mua");
					this.Onso_luong_ve_muaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tong_so_tien", DbType="Money")]
		public System.Nullable<decimal> tong_so_tien
		{
			get
			{
				return this._tong_so_tien;
			}
			set
			{
				if ((this._tong_so_tien != value))
				{
					this.Ontong_so_tienChanging(value);
					this.SendPropertyChanging();
					this._tong_so_tien = value;
					this.SendPropertyChanged("tong_so_tien");
					this.Ontong_so_tienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Receipt_Ticket", Storage="_Tickets", ThisKey="ID_HoaDon", OtherKey="ID_Receipt")]
		public EntitySet<Tickets> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tickets(Tickets entity)
		{
			this.SendPropertyChanging();
			entity.Receipts = this;
		}
		
		private void detach_Tickets(Tickets entity)
		{
			this.SendPropertyChanging();
			entity.Receipts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket")]
	public partial class Tickets : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TICKET;
		
		private System.Nullable<decimal> _PRICE_TICKET;
		
		private System.Nullable<System.DateTime> _DATETIME_TICKET;
		
		private string _CLASS_TICKET;
		
		private string _SEAT_TICKET;
		
		private System.Nullable<int> _ID_Customer;
		
		private System.Nullable<int> _ID_FLIGHT;
		
		private System.Nullable<int> _ID_Receipt;
		
		private EntityRef<Flights> _Flights;
		
		private EntityRef<Receipts> _Receipts;
		
		private EntityRef<Users> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TICKETChanging(int value);
    partial void OnID_TICKETChanged();
    partial void OnPRICE_TICKETChanging(System.Nullable<decimal> value);
    partial void OnPRICE_TICKETChanged();
    partial void OnDATETIME_TICKETChanging(System.Nullable<System.DateTime> value);
    partial void OnDATETIME_TICKETChanged();
    partial void OnCLASS_TICKETChanging(string value);
    partial void OnCLASS_TICKETChanged();
    partial void OnSEAT_TICKETChanging(string value);
    partial void OnSEAT_TICKETChanged();
    partial void OnID_CustomerChanging(System.Nullable<int> value);
    partial void OnID_CustomerChanged();
    partial void OnID_FLIGHTChanging(System.Nullable<int> value);
    partial void OnID_FLIGHTChanged();
    partial void OnID_ReceiptChanging(System.Nullable<int> value);
    partial void OnID_ReceiptChanged();
    #endregion
		
		public Tickets()
		{
			this._Flights = default(EntityRef<Flights>);
			this._Receipts = default(EntityRef<Receipts>);
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TICKET", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_TICKET
		{
			get
			{
				return this._ID_TICKET;
			}
			set
			{
				if ((this._ID_TICKET != value))
				{
					this.OnID_TICKETChanging(value);
					this.SendPropertyChanging();
					this._ID_TICKET = value;
					this.SendPropertyChanged("ID_TICKET");
					this.OnID_TICKETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE_TICKET", DbType="Money")]
		public System.Nullable<decimal> PRICE_TICKET
		{
			get
			{
				return this._PRICE_TICKET;
			}
			set
			{
				if ((this._PRICE_TICKET != value))
				{
					this.OnPRICE_TICKETChanging(value);
					this.SendPropertyChanging();
					this._PRICE_TICKET = value;
					this.SendPropertyChanged("PRICE_TICKET");
					this.OnPRICE_TICKETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATETIME_TICKET", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATETIME_TICKET
		{
			get
			{
				return this._DATETIME_TICKET;
			}
			set
			{
				if ((this._DATETIME_TICKET != value))
				{
					this.OnDATETIME_TICKETChanging(value);
					this.SendPropertyChanging();
					this._DATETIME_TICKET = value;
					this.SendPropertyChanged("DATETIME_TICKET");
					this.OnDATETIME_TICKETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLASS_TICKET", DbType="NVarChar(100)")]
		public string CLASS_TICKET
		{
			get
			{
				return this._CLASS_TICKET;
			}
			set
			{
				if ((this._CLASS_TICKET != value))
				{
					this.OnCLASS_TICKETChanging(value);
					this.SendPropertyChanging();
					this._CLASS_TICKET = value;
					this.SendPropertyChanged("CLASS_TICKET");
					this.OnCLASS_TICKETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEAT_TICKET", DbType="NVarChar(100)")]
		public string SEAT_TICKET
		{
			get
			{
				return this._SEAT_TICKET;
			}
			set
			{
				if ((this._SEAT_TICKET != value))
				{
					this.OnSEAT_TICKETChanging(value);
					this.SendPropertyChanging();
					this._SEAT_TICKET = value;
					this.SendPropertyChanged("SEAT_TICKET");
					this.OnSEAT_TICKETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Customer", DbType="Int")]
		public System.Nullable<int> ID_Customer
		{
			get
			{
				return this._ID_Customer;
			}
			set
			{
				if ((this._ID_Customer != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CustomerChanging(value);
					this.SendPropertyChanging();
					this._ID_Customer = value;
					this.SendPropertyChanged("ID_Customer");
					this.OnID_CustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_FLIGHT", DbType="Int")]
		public System.Nullable<int> ID_FLIGHT
		{
			get
			{
				return this._ID_FLIGHT;
			}
			set
			{
				if ((this._ID_FLIGHT != value))
				{
					if (this._Flights.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_FLIGHTChanging(value);
					this.SendPropertyChanging();
					this._ID_FLIGHT = value;
					this.SendPropertyChanged("ID_FLIGHT");
					this.OnID_FLIGHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Receipt", DbType="Int")]
		public System.Nullable<int> ID_Receipt
		{
			get
			{
				return this._ID_Receipt;
			}
			set
			{
				if ((this._ID_Receipt != value))
				{
					if (this._Receipts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ReceiptChanging(value);
					this.SendPropertyChanging();
					this._ID_Receipt = value;
					this.SendPropertyChanged("ID_Receipt");
					this.OnID_ReceiptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Flight_Ticket", Storage="_Flights", ThisKey="ID_FLIGHT", OtherKey="ID_FLIGHT", IsForeignKey=true)]
		public Flights Flights
		{
			get
			{
				return this._Flights.Entity;
			}
			set
			{
				Flights previousValue = this._Flights.Entity;
				if (((previousValue != value) 
							|| (this._Flights.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Flights.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Flights.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._ID_FLIGHT = value.ID_FLIGHT;
					}
					else
					{
						this._ID_FLIGHT = default(Nullable<int>);
					}
					this.SendPropertyChanged("Flights");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Receipt_Ticket", Storage="_Receipts", ThisKey="ID_Receipt", OtherKey="ID_HoaDon", IsForeignKey=true)]
		public Receipts Receipts
		{
			get
			{
				return this._Receipts.Entity;
			}
			set
			{
				Receipts previousValue = this._Receipts.Entity;
				if (((previousValue != value) 
							|| (this._Receipts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Receipts.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Receipts.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._ID_Receipt = value.ID_HoaDon;
					}
					else
					{
						this._ID_Receipt = default(Nullable<int>);
					}
					this.SendPropertyChanged("Receipts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket", Storage="_Users", ThisKey="ID_Customer", OtherKey="ID_User", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._ID_Customer = value.ID_User;
					}
					else
					{
						this._ID_Customer = default(Nullable<int>);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_User;
		
		private string _Name;
		
		private string _SDT;
		
		private string _CMND;
		
		private string _Email;
		
		private string _userName;
		
		private string _pass;
		
		private string _permission;
		
		private EntitySet<Tickets> _Tickets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_UserChanging(int value);
    partial void OnID_UserChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OnpermissionChanging(string value);
    partial void OnpermissionChanged();
    #endregion
		
		public Users()
		{
			this._Tickets = new EntitySet<Tickets>(new Action<Tickets>(this.attach_Tickets), new Action<Tickets>(this.detach_Tickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_User", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_User
		{
			get
			{
				return this._ID_User;
			}
			set
			{
				if ((this._ID_User != value))
				{
					this.OnID_UserChanging(value);
					this.SendPropertyChanging();
					this._ID_User = value;
					this.SendPropertyChanged("ID_User");
					this.OnID_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="NVarChar(100)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="NVarChar(100)")]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="NVarChar(100)")]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permission", DbType="NVarChar(100)")]
		public string permission
		{
			get
			{
				return this._permission;
			}
			set
			{
				if ((this._permission != value))
				{
					this.OnpermissionChanging(value);
					this.SendPropertyChanging();
					this._permission = value;
					this.SendPropertyChanged("permission");
					this.OnpermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket", Storage="_Tickets", ThisKey="ID_User", OtherKey="ID_Customer")]
		public EntitySet<Tickets> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tickets(Tickets entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_Tickets(Tickets entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
	}
}
#pragma warning restore 1591
